name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install deps
        run: npm ci

      - name: Build
        env:
          NEXT_TELEMETRY_DISABLED: 1
        run: npm run build

      # ===== Preparar clave SSH (SIN base64) =====
      - name: Prepare SSH key
        shell: bash
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}   # tu clave privada completa (BEGIN/END)
        run: |
          umask 077
          # escribir la clave EXACTA desde el secreto
          printf '%s\n' "$SSH_KEY" > id_ed25519
          # por si el secreto tiene \r (Windows line endings)
          sed -i 's/\r$//' id_ed25519
          # validar que parsea
          ssh-keygen -y -f id_ed25519 > /dev/null

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload project to server
        shell: bash
        run: |
          rsync -az --delete \
            --exclude ".git" --exclude "node_modules" --exclude ".github" --exclude ".env*" \
            -e "ssh -i $PWD/id_ed25519 -o StrictHostKeyChecking=no" \
            ./  ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.APP_DIR }}/

      - name: Install & restart on server
        shell: bash
        run: |
          ssh -i id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "APP_DIR='${{ secrets.APP_DIR }}' bash -s" <<'EOF'
          set -euo pipefail
          cd "$APP_DIR"
      
          # Asegurar PM2
          if ! command -v pm2 >/dev/null 2>&1; then
            npm i -g pm2
          fi
      
          # Build en el VPS
          npm ci
          npm run build
      
          # Si ya existe, reload; si no, start
          if pm2 describe logiszar-erp >/dev/null 2>&1; then
            pm2 startOrReload ecosystem.config.js --update-env
          else
            pm2 start "npm run start -- -p 3000" --name logiszar-erp
          fi
      
          pm2 save
          EOF
